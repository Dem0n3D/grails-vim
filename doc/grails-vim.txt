*grails-vim.txt*   Make your IDE-using friends jealous.

Introduction                                  *grails-vim* *grails*

What is Grails-Vim?

Grails-Vim is modeled after Tim Pope's Rails.vim. It provides navigation
shortcuts and cool testing features for Grails projects, as well as some basic
gsp syntax highlighting

Even if you use an IDE most of the time, Grails-vim is handy when you don't
want to wait 10 minutes for your IDE to start or if you're on a machine with
less than 2 TB of memory.

------------------------------------------------------------------------------
Installation                                  *grails-vim-installation*

Install grails-vim by unzipping into your ~/.vim directory.

If you want to see Grails test results in Vim, $GROOVY_HOME needs to be set
correctly and groovy needs to be on your $PATH.  See |grails-vim-testing-functions|.

Grails-vim is hosted at github:
http://github.com/NathanNeff/grails-vim

------------------------------------------------------------------------------
Quick Start                                   *grails-vim-quickstart*

Open Vim in the root directory of a Grails project.

Open the URLMappings file by pressing "\gu" (Or, if you have your mapleader
customized, by pressing the appropriate <leader>gu).

You should jump to the UrlMappings.groovy file.

Now, press "\gt".  You will jump to UrlMappingsTests.groovy

Open a Domain Model in your Grails project, then press "\gc".  You will jump
to the appropriate controller.

  * Grails-vim navigation functions read |grails-vim-navigation-functions|
  * Grails-vim testing functions read |grails-vim-testing-functions|
  * To customize the "\g" keyboard mapping, read |grails-vim-mapleader|.
  * To customize keyboard mappings, read |grails-vim-customizing-mappings|

------------------------------------------------------------------------------
Navigation functions                           *grails-vim-navigation-functions*

Shortcut:                Purpose:

|g:GrailsLeader| + d     Jump to corresponding Domain Model
                         Calls <Plug>GrailsDisplayDomainClass     

|g:GrailsLeader| + c     Jump to corresponding Controller
                         Calls <Plug>GrailsDisplayController      

|g:GrailsLeader| + v     Opens a Netrw screen with the views that correspond to the current file.
                         Calls <Plug>GrailsDisplayViews           

|g:GrailsLeader| + s     Jump to corresponding Service (Ex: User.groovy -> UserService.groovy)
                         Calls <Plug>GrailsDisplayService         

------------------------------------------------------------------------------
Jumping to Tests / Test Results               *grails-vim-testing-functions*

Grails-vim helps navigate the test-reports that are generated by Grails.

Before using these mappings, run the tests for your Grails app from the command
line.

|g:GrailsLeader| + g    Opens |quickfix-window| with a list of failed tests.  
                        Press <Enter> in the quickfix window to jump to the failed tests.
                        You can use Vim's built-in |quickfix| functionality for navigating tests.
                        
                        Note: This list is created by running a script that's
                        written in Groovy.  Make sure your $GROOVY_HOME
                        environment variable is set, and that groovy is on
                        your $PATH.

                        Calls <Plug>GrailsReadTestOutput

|g:GrailsLeader| + r    Jump to the test report for the current file.  For example, if you're in
                        UserTests.groovy, Grails-vim will jump to the output file for that test, where
                        you can see the details of the test output / errors and stack traces.
                        Calls <Plug>GrailsDisplayTestReports

|g:GrailsLeader| + t    Jump to the test for the current file.  For example, if you're in
                        User.groovy, you will jump to UserTests.groovy
                        Calls <Plug>GrailsDisplayTests

|g:GrailsLeader| + x    Jump to the XML test output for the current file.  XML
                        versions of the test reports are of course more structured, and can help with
                        debugging tests.
                        Calls <Plug>GrailsDisplayTestXml

------------------------------------------------------------------------------
GrailsLeader                                   *grails-vim-g:GrailsLeader*

By default, most Grails-vim mappings begin with |<leader>|g.  

Wherever you see |g:GrailsLeader| in this documentation, you should think
"\g", unless you've defined your own |<leader>| key or defined your own
g:GrailsLeader key.

If you customized Vim's <leader> key, then Grails-Vim keymappings will start
with your user-defined leader + "g".

Example (in ~/.vimrc):

  let mapleader=","

  " Now, Grails-vim shortcuts will start with ",g" instead of "\g"
  
------------------------------------------------------------------------------
Customize g:GrailsLeader                       *grails-vim-customize-leader*

If you already have <leader>g mapped to your own commands, you can define
a variable called |g:GrailsLeader|.  For example, in your vimrc:

  let g:GrailsLeader=,h

Now, most of the Grails-vim keymappings will start with ",h".

For example, to jump to a Controller, you would now type ",hc".

------------------------------------------------------------------------------
Controller navigation                         *grails-vim-conroller-mappings*

When you open a Controller, you can use the following quick-marks to quickly navigate
the controller:

'c                      Jumps to "Create" action
'd                      Jumps to the "Delete" action
'e                      "Edit" action
'h                      "Show" action
'i                      "Index" action
'l                      "List" action
's                      "Save" action
'u                      "Update" action

==============================================================================
Screenshots                                   *grails-vim-screenshots*

View output of Test Results
  - http://notesmine.com/grails_vim#jump_to_test_results

==============================================================================
About                                         *grails-vim-about*

The author of Grails-vim likes open source software and decided to stop
complaining about other people's software and start giving back.

Please contact me at nathan.neff@gmail.com with any questions, feedback, requests or
patches.

The latest dev versions are on github
    http://github.com/NathanNeff/grails-vim

==============================================================================
Changelog                                     *grails-vim-changelog*
0.2 features:
    Added g:GrailsLeader to allow users to define their own map leader
    for GrailsVim commands

        GrailsVim

0.1 features:
    Jump to controllers, domain models, tests.  Open views/<model> directory to
    see the views that belong to <model>

    View errors/failed tests using <leader>gg

==============================================================================
Future Plans                                  *grails-vim-future*

The following features are floating around as ideas:

  - Jump to multiple files.  If you have UserUnitTests and
    UserFunctionalTests, then a menu will pop up, and allow you to pick which
    file to jump to.  Smart-menu system should be used so that the frequently
    used files are at the top of the menu.

  - Split-open windows.  For example, <leader>gt would open a file's test in a
    split window.
  
  - Smarter test-report jumps.
    When you're in testSomething() method, and jump to the test reports, Vim
    should find testSomething()'s output and jump to it, rather than forcing
    the user to look through the test-report file

==============================================================================
Credits                                       *grails-vim-credits*

Thanks to the following people for testing, bug reports, ideas etc. 

    Tim Pope
    Oren Goldberg

==============================================================================
License                                                   *Grails-vim-License*

arails-vim is licensed under some license.
